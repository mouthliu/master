<?php
namespace Api\Logic;
use Common\Service\RestService;
/**
 * Class OrderLogic
 * @package Api\Logic
 * 用户服务订单模块
 */
class ServiceOrderLogic extends BaseLogic{
    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 服务订单列表1
     */
    public function serviceOrderList($request = array()){
        $member = $this ->searchMember($request['token']);
        $where['sorder.m_id']   = $member['id'];
        if($request['type'] != 3){
            $where['sorder.s_order_status'] = $request['type'];
        }
        $where['sorder.status'] = array('neq',9);
        $field = 'sorder.id as sorder_id, sorder.order_sn, sorder.create_time, sorder.s_order_status, service.title, service.picture';
        $order = 'sorder.create_time desc';
        $order_list = D('ServiceOrder') ->selectServiceOrder($where, $field, $order, $request['p']);
        if(!$order_list){
            $order_list = array();
        }else{
            foreach($order_list as $k => $v){
                $order_list[$k]['create_time'] = date('Y-m-d H:i:s',$v['create_time']);
                $picture = $this ->searchPhoto($v['picture']);
                $order_list[$k]['picture'] = $picture?$picture:'';
            }
        }

        apiResponse('1','',$order_list);
    }

    /**
     * 服务订单详情2
     */
    public function serviceOrderInfo($request = array()){
        $member = $this ->searchMember($request['token']);
        $where  = array('sorder.id'=>$request['sorder_id'], 'sorder.status'=>array('neq',9));
        $field  = 'sorder.id as sorder_id, sorder.order_sn, sorder.master_id, sorder.create_time, sorder.s_order_status, sorder.name, sorder.sex, sorder.birthday, sorder.content, sorder.price, service.title, master.nickname as mas_nickname, master.head_pic as mas_head_pic, master.field_id, master.auth_status, master.social_id, master.introduction, master.score, region.region_name, master.easemob_account as mas_easemob_account, member.nickname as mem_nickname, member.head_pic as mem_head_pic, member.easemob_account as mem_easemob_account';
        $order_list = D('ServiceOrder') ->selectServiceOrder($where, $field, '', '', '', 1);
        if(!$order_list){
            apiResponse('0','服务订单详情有误');
        }
        $order_list['create_time'] = date('Y-m-d H:i:s',$order_list['create_time']);
        $head_pic = $this ->searchPhoto($order_list['mas_head_pic']);
        $order_list['mas_head_pic'] = $head_pic?$head_pic:C('API_URL').'/Uploads/Master/default.png';
        $mem_head_pic = $this ->searchPhoto($order_list['mem_head_pic']);
        $order_list['mem_head_pic'] = $mem_head_pic?$mem_head_pic:C('API_URL').'/Uploads/Member/default.png';
        if($order_list['social_id'] != 0){
            $order_list['social_status'] = '1';
        }else{
            $order_list['social_status'] = '2';
        }

        if(!empty($order_list['field_id'])){
            $field_list = explode(',',$order_list['field_id']);
            $field_info = array();
            foreach($field_list as $key =>$val){
                $field_name = $this ->easyMysql('Field',3,array('id'=>$val,'status'=>array('neq',9)),'','id as field_id, field_name');
                if(!empty($field_name)){
                    $field_info[] = $field_name;
                }
            }
        }
        $order_list['field_info'] = $field_info?$field_info:array();
        $order_num = $this ->serviceOrderNum($order_list['master_id']);
        $order_list['order_num'] = $order_num?$order_num.'':'0';

        apiResponse('1','',$order_list);
    }

    /**
     * 取消订单4
     */
    public function cancelOrder($request = array()){
        $member = $this ->searchMember($request['token']);
        $where  = array('id'=>$request['sorder_id'], 'm_id'=>$member['id'], 's_order_status'=>0);
        $order  = $this ->easyMysql('ServiceOrder',3,$where);
        if(!$order){
            apiResponse('0','订单信息有误');
        }
        $data['s_order_status'] = '5';
        $data['update_time'] = time();
        $result = $this ->easyMysql('ServiceOrder',2,$where,$data);
        if(!$result){
            apiResponse('0','取消订单失败');
        }

        //输入用户信息  商家信息  商家详情  商家明细
//        $message_member = $this ->addMessage(1,$member['id'],1,$request['sorder_id'],'服务消息','取消服务订单成功，我们将通知相关大师。');
//        $message_master = $this ->addMessage(2,$order['master_id'],1,$request['sorder_id'],'服务消息','您的服务订单已被用户取消，请你查收相关信息。');

        apiResponse('1','取消订单成功');
    }

    /**
     * 申请退款
     */
    public function applyRefund($request = array()){
        $member = $this ->searchMember($request['token']);
        $where  = array('id'=>$request['sorder_id'],'m_id'=>$member['id']);
        $result = $this ->easyMysql('ServiceOrder',3,$where);
        if(!$result){
            apiResponse('0','订单详情有误');
        }
        $data['s_order_status'] = 6;
        $data['update_time'] = time();
        $result_data = $this ->easyMysql('ServiceOrder', 2, $where, $data);
        if(!$result_data){
            apiResponse('0','修改订单状态有误');
        }
        unset($data);
        $reason = $this ->easyMysql('Reason',3,array('id'=>$request['reason_id']));
        if(!$reason){
            apiResponse('0','原因选择有误');
        }
        $data['m_id']          = $member['id'];
        $data['master_id']     = $result['master_id'];
        $data['order_id']      = $result['id'];
        $data['order_type']    = 1;
        $data['customer_type'] = 2;
        $data['goods_type']    = 2;
        $data['reason']        = $request['reason_id'];
        $data['price']         = $request['price'];
        $data['content']       = $request['content'];
        //发布图片不能为空w_r_pic0 w_r_pic1 w_r_pic2
        if($_FILES['picture']['name']){
            $res_pic = api('UploadPic/upload', array(array('save_path' => "Comment")));
            $picture = array();
            foreach ($res_pic as $k => $value) {
                if($value['key'] == 'picture'){
                    $picture[] = $value['id'];
                }
            }
            $data['picture'] = implode(',',$picture);
        }
        $data['create_time'] = time();
        $res = $this ->easyMysql('Customer',1,'', $data);
        if(!$res){
            apiResponse('0','提交申请失败');
        }
        unset($data);
        $data['user_type'] = 1;
        $data['user_id']   = $member['id'];
        $data['order_id']  = $result['id'];
        $data['order_type'] = 1;
        $data['headline']  = '买家发起了申请';
        $data['content']   = '发起了退货申请，服务状态：未得到相应服务，原因：'.$reason['reason_name'].',金额：'.$request['price'].'元。';
        $data['picture']   = $picture?implode(',',$picture):'';
        $data['create_time'] = time();
        $data['price']     = $request['price'];
        $message = $this ->easyMysql('MessageRefund',1,'',$data);
        if(!$message){
            apiResponse('0','写入信息有误');
        }

        //输入用户信息  商家信息  商家详情  商家明细
//        $message_member = $this ->addMessage(1,$member['id'],1,$request['sorder_id'],'服务消息','您已发起退款申请，请等待大师进行处理。');
//        $message_master = $this ->addMessage(2,$result['master_id'],1,$request['sorder_id'],'服务消息','您有一条订单已被申请退款，请进行相关处理。');

        apiResponse('1','提交申请成功');
    }

    /**
     * 等待评价
     */
    public function evaluateOrder($request = array()){
        //查询用户以及订单信息
        $member = $this ->searchMember($request['token']);
        $where  = array('id'=>$request['sorder_id'],'status'=>array('neq',9));
        $order  = $this ->easyMysql('ServiceOrder',3,$where);
        if(!$order){
            apiResponse('0','订单详情有误');
        }
        //对该订单进行评论
        $data['m_id'] = $member['id'];
        $data['master_id'] = $order['master_id'];
        $data['rank'] = $request['rank'];
        $data['content'] = $request['content'];
        $data['anonymous'] = $request['anonymous'];
        //发布图片不能为空w_r_pic0 w_r_pic1 w_r_pic2
        if($_FILES['picture']['name']){
            $res_pic = api('UploadPic/upload', array(array('save_path' => "Comment")));
            $picture = array();
            foreach ($res_pic as $k => $value) {
                if($value['key'] == 'picture'){
                    $picture[] = $value['id'];
                }
            }
            $data['picture'] = implode(',',$picture);
        }
        $data['create_time'] = time();
        $res = $this ->easyMysql('Comment',1,'',$data);
        if(!$res){
            apiResponse('0','评论失败');
        }
        //修改订单信息
        unset($data);
        $data['s_order_status'] = 4;
        $data['update_time'] = time();
        $result = $this ->easyMysql('ServiceOrder',2,$where, $data);
        if(!$result){
            apiResponse('0','修改订单信息有误');
        }
        //获取评价的数量和总星级
        $where  = array('master_id'=>$order['master_id']);
        $comment_count = $this ->easyMysql('Comment','6',$where);
        $count = $comment_count?$comment_count:0;
        $rank  = M('Comment') ->where($where) ->field('SUM(rank) as rank_num') ->find();

        $dat['score'] = ($rank['rank_num'] + 5)/($count+1);
        $dat['update_time'] = time();
        $result_data = $this ->easyMysql('Master','2',array('id'=>$order['master_id']),$dat);
        if(!$result_data){
            apiResponse('0','分数写入数据库失败');
        }

        $master_price = $this ->setType('Master',array('id'=>$order['master_id']),'balance',$order['res_price'],1);
        $detail = $this ->addDetail(2, $order['master_id'], 2, '服务订单收入', 1, $order['res_price']);
        $paylog = $this ->addPayLog($order['m_id'],$order['master_id'],1,'服务订单收入',$order['res_price']);
        $member_integral = $this ->setType('Member',array('id'=>$member['id']),'integral',$order['price'],1);
        apiResponse('1','评价成功');
    }

    /**
     * 删除订单5
     */
    public function deleteOrder($request = array()){
        $member = $this ->searchMember($request['token']);
        $where  = array('id'=>$request['sorder_id'], 'm_id'=>$member['id'], 'status'=>array('neq',9));
        $res    = $this ->easyMysql('ServiceOrder',3,$where);
        if(!$res){
            apiResponse('0','订单详情不能为空');
        }
        $data['status'] = 9;
        $data['update_time'] = time();
        $result = $this ->easyMysql('ServiceOrder',2,$where,$data);
        if(!$result){
            apiResponse('0','删除订单失败');
        }

        apiResponse('1','删除订单成功');
    }

    /**
     * 协商退货页面
     */
    public function refundPage($request = array()){
        $member = $this ->searchMember($request['token']);
        $where['order_id']  = $request['sorder_id'];
        $where['order_type'] = 1;
        $field = 'id as refund_id, user_type, headline, order_id, content, picture, create_time, price, status';
        $order = 'create_time asc';
        $result = $this ->easyMysql('MessageRefund','4',$where,'',$field, $order);

        if(!$result){
            $result = array();
        }else{
            foreach($result as $k =>$v){
                unset($picture);
                $result[$k]['create_time'] = date('Y-m-d H:i:s', $v['create_time']);
                if($v['picture'] != ''){
                    $pic = explode(',',$v['picture']);
                    $picture = array();
                    foreach($pic as $key =>$val){
                        $photo = $this ->searchPhoto($val);
                        $picture[$key]['pic'] = $photo?$photo:'';
                    }
                }
                $result[$k]['picture'] = $picture?$picture:array();
            }
        }

        apiResponse('1','',$result);
    }

    /**
     * 评价服务订单页面6
     */
    public function evaluateOrderPage($request = array()){
        $where  = array('sorder.id'=>$request['sorder_id'],'sorder.status'=>array('neq',9));
        $field  = 'sorder.id as sorder_id, sorder.master_id, master.nickname, master.head_pic';
        $result = D('ServiceOrder') ->selectServiceOrder($where, $field, '', '', '', 1);
        if(!$result){
            apiResponse('0','订单信息有误');
        }
        $head_pic = $this ->searchPhoto($result['head_pic']);
        $result['head_pic'] = $head_pic?$head_pic:C('API_URL').'/Uploads/Master/default.png';

        apiResponse('1','',$result);
    }

    /**
     * 退货原因列表3
     */
    public function reasonList(){
        $where = array('status'=>array('neq',9));
        $field = 'id as reason_id, reason_name';
        $order = 'sort desc, create_time desc';
        $reason = $this ->easyMysql('Reason',4,$where,'',$field, $order);
        if(!$reason){
            $reason = array();
        }
        apiResponse('1','',$reason);
    }

    /**
     * 取消退款
     * 用户token   token
     * 服务订单id  sorder_id
     */
    public function cancellRefund($request = array()){
        $member = $this ->searchMember($request['token']);
        $which = array('id'=>$request['sorder_id'],'status'=>array('neq',9),'m_id'=>$member['id']);
        $sorder = $this ->easyMysql('ServiceOrder','3',$which);
        if(!$sorder){
            apiResponse('0','服务订单信息有误');
        }
        $data['s_order_status'] = 1;
        $data['create_time'] = time();
        $sorder_res = $this ->easyMysql('ServiceOrder','2',$which,$data);
        if(!$sorder_res){
            apiResponse('0','修改服务订单状态失败');
        }

        $where  = array('m_id'=>$member['id'],'order_id'=>$request['sorder_id'],'order_type'=>1);
        $customer = $this ->easyMysql('Customer','3',$where);
        if(!$customer){
            apiResponse('0','您还未申请退款');
        }
        $data['status'] = 3;
        $data['update_time'] = time();
        $result = $this ->easyMysql('Customer','2',$where,$data);
        if(!$result){
            apiResponse('0','保存状态失败');
        }
        unset($data);
        $data['user_type'] = 1;
        $data['user_id']   = $member['id'];
        $data['order_id']  = $request['sorder_id'];
        $data['order_type'] = 1;
        $data['headline']  = '买家取消退货';
        $data['content']   = '买家已经取消退货流程。';
        $data['create_time'] = time();
        $data['price']     = '0.00';
        $message = $this ->easyMysql('MessageRefund',1,'',$data);
        if(!$message){
            apiResponse('0','写入信息有误');
        }
        $dat['s_order_status'] = 1;
        $dat['update_time'] = time();
        $res = $this ->easyMysql('ServiceOrder','2',$which,$dat);
        if(!$res){
            apiResponse('0','修改订单状态失败');
        }

        //输入用户信息  商家信息  商家详情  商家明细
//        $message_member = $this ->addMessage(1,$member['id'],1,$request['sorder_id'],'服务消息','您已取消订单退款，请继续您的订单流程。');
//        $message_master = $this ->addMessage(2,$sorder['master_id'],1,$request['sorder_id'],'服务消息','您的用户已取消订单退款，请继续您的订单流程。');

        apiResponse('1','取消申请成功');
    }
}