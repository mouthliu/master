<?php
namespace Api\Controller;
use Think\Controller;
use Common\Service\RestService;

/**
 * Class OrderController
 * @package Api\Controller
 * 订单模块
 */
class PayController extends BaseController{
    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 获取支付宝支付参数
     * 传递参数的方式：post
     * 需要传递的参数：
     * 订单id：1  rorder_id  2  watch_id  3  sorder_id  4  red_id
     * 类型：type  1  悬赏订单  2  围观支付  3  服务订单  4  随缘红包
     * 订单金额  price
     */
    public function getAlipayParam(){
        Vendor('Alipay.Alipay');
        //类型：type  1  悬赏订单  2  围观支付  3  服务订单  4  随缘红包
        if($_POST['type'] != 1&&$_POST['type'] != 2&&$_POST['type'] != 3&&$_POST['type'] != 4&&$_POST['type'] != 5){
            apiResponse('0','状态类型不对');
        }
        if(!$_POST['price']){
            apiResponse('0','金额不能为空');
        }

        if($_POST['type'] == 1){
            if(!$_POST['rorder_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('RewardOrder')->where(array('id'=>$_POST['rorder_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/rewardAlipayNotify';
        }elseif($_POST['type'] == 2){
            if(!$_POST['watch_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('Watch')->where(array('id'=>$_POST['watch_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/watchAlipayNotify';
        }elseif($_POST['type'] == 3){
            if(!$_POST['sorder_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('ServiceOrder')->where(array('id'=>$_POST['sorder_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/serviceAlipayNotify';
        }elseif($_POST['type'] == 4){
            if(!$_POST['red_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('RedPackage')->where(array('id'=>$_POST['red_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/redAlipayNotify';
        }elseif($_POST['type'] == 5){
            if(!$_POST['order_sn']){
                apiResponse('0','订单编号不能为空');
            }
            $first_letter = substr($_POST['order_sn'],0,1);
            $bool = is_numeric($first_letter);
            if($bool == 0){
                $info = M('OrderGroup') ->where(array('order_total_sn'=>$_POST['order_sn'])) ->field('id as order_id, order_total_sn as order_sn, order_total_price as price') ->find();
            }else{
                $info = M('Order') ->where(array('order_sn'=>$_POST['order_sn'])) ->find();
            }
            $url  = C('API_URL').'/index.php/Api/Pay/orderAlipayNotify';
        }

        if(!$info){
            apiResponse('0','订单信息有误');
        }
        $order_sn = $info['order_sn'];
//        $pay_money = $_POST['price'];
$pay_money = '0.01';
        //生成支付字符串
//        $notify_url   = C('API_URL').'/index.php/Api/Pay/alipayNotify';
        $notify_url   = $url;
        $out_trade_no = $order_sn;
        $total_amount = $pay_money;
        $signType     = 'RSA2';
        $payObject = new \Alipay($notify_url,$out_trade_no,$total_amount,$signType);
        $pay_string = $payObject->appPay();
        apiResponse('1','请求成功',array('pay_string'=>$pay_string));
    }

    /**
     * 获取微信支付参数
     * 传递参数的方式：post
     * 需要传递的参数：
     * 订单id：1  rorder_id  2  watch_id  3  sorder_id  4  red_id
     * 类型：type  1  悬赏订单  2  围观支付  3  服务订单  4  随缘红包
     * 订单金额  price
     */
    public function getWXPayParam(){
        Vendor('WxPayApp.lib.WxPay#Api');
        //类型：type  1  悬赏订单  2  围观支付  3  服务订单  4  随缘红包
        if($_POST['type'] != 1&&$_POST['type'] != 2&&$_POST['type'] != 3&&$_POST['type'] != 4&&$_POST['type'] != 5){
            apiResponse('0','状态类型不对');
        }
        if(!$_POST['price']){
            apiResponse('0','金额不能为空');
        }
        if($_POST['type'] == 1){
            if(!$_POST['rorder_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('RewardOrder')->where(array('id'=>$_POST['rorder_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/rewardWXinNotify';
        }elseif($_POST['type'] == 2){
            if(!$_POST['watch_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('Watch')->where(array('id'=>$_POST['watch_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/watchWXinNotify';
        }elseif($_POST['type'] == 3){
            if(!$_POST['sorder_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('ServiceOrder')->where(array('id'=>$_POST['sorder_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/serviceWXinNotify';
        }elseif($_POST['type'] == 4){
            if(!$_POST['red_id']){
                apiResponse('0','订单ID不能为空');
            }
            $info = M('RedPackage')->where(array('id'=>$_POST['red_id']))->find();
            $url  = C('API_URL').'/index.php/Api/Pay/redWXinNotify';
        }elseif($_POST['type'] == 5){
            if(!$_POST['order_sn']){
                apiResponse('0','订单编号不能为空');
            }
            $first_letter = substr($_POST['order_sn'],0,1);
            $bool = is_numeric($first_letter);
            if($bool == 0){
                $info = M('OrderGroup') ->where(array('order_total_sn'=>$_POST['order_sn'])) ->field('id as order_id, order_total_sn as order_sn, order_total_price as price') ->find();
            }else{
                $info = M('Order') ->where(array('order_sn'=>$_POST['order_sn'])) ->find();
            }
            $url  = C('API_URL').'/index.php/Api/Pay/orderWXinNotify';
        }

        if(!$info){
            apiResponse('0','订单信息有误');
        }

        //②、统一下单
        $input = new \WxPayUnifiedOrder();
        $input->SetBody("大师支付");
        $input->SetAttach("大师支付");
        $input->SetOut_trade_no($info['order_sn']);
//        $input->SetTotal_fee($_POST['price']*100);
        $input->SetTotal_fee(1);

        $input->SetTime_start(date("YmdHis"));
        $input->SetTime_expire(date("YmdHis", time() + 600));
        $input->SetGoods_tag("APP支付");
//        $input->SetNotify_url("http://wday.txunda.com/index.php/Api/Index/wXinNotify");
        $input->SetNotify_url($url);
        $input->SetTrade_type("APP");
        $order = \WxPayApi::unifiedOrder($input);
//apiResponse('error','',$order);
        $time = time().'';
        $sign_data['appid']     = $order['appid'];
        $sign_data['mch_id']    = $order['mch_id'];
        $sign_data['nonce_str']  = $order['nonce_str'];
        $sign_data['package']   = 'Sign=WXPay';
        $sign_data['prepay_id'] = $order['prepay_id'];
        $sign_data['time_stamp'] = $time;

        $sign_string = 'appid='.$sign_data['appid'].'&noncestr='.$sign_data['nonce_str'].'&package='.$sign_data['package'].'&partnerid='.$order['mch_id'].'&prepayid='.$sign_data['prepay_id'].'&timestamp='.$sign_data['time_stamp'].'&key='.\WxPayConfig::KEY;
        $result_data['sign'] = strtoupper(md5($sign_string));

        $result_data['appid']      = $order['appid'];
        $result_data['nonce_str']  = $order['nonce_str'];
        $result_data['package']    = 'Sign=WXPay';
        $result_data['time_stamp'] = $time;
        $result_data['prepay_id']  = $order['prepay_id'];
        $result_data['mch_id']     = $order['mch_id'];

        apiResponse('1','请求成功',$result_data);
    }

    /**
     * 悬赏订单余额支付
     * 用户token   token
     * 悬赏订单ID  rorder_id
     * 悬赏金额    price
     */
    public function rewardPayOrder(){
        if(empty($_SERVER['HTTP_TOKEN']) && empty($_POST['token'])){
            apiResponse('-1','账号已过期，请重新登录');
        }elseif($_SERVER['HTTP_TOKEN']){
            $_POST['token'] = $_SERVER['HTTP_TOKEN'];
        }

        if(!$_POST['rorder_id']){
            apiResponse('0','悬赏订单ID不能为空');
        }

        if($_POST['price'] < 0){
            apiResponse('0','悬赏金额有误');
        }
        D('Pay','Logic') ->rewardPayOrder(I('post.'));
    }

    /**
     * 悬赏订单支付宝回调
     * 订单号    out_trade_no
     * 支付宝状态  trade_status  TRADE_SUCCESS
     */
    public function rewardAlipayNotify(){
        Vendor('Alipay.Notify');
        $notify = new \Notify();
        if($notify->rsaCheck()) {
            $out_trade_no = $_POST['out_trade_no'];
            $trade_status = $_POST['trade_status'];
            if ($trade_status == 'TRADE_SUCCESS') {
                $where['order_sn'] = $out_trade_no;
                $where['pay_status'] = 0;
                $where['pay_type'] = 0;
                $where['r_order_status']   = 0;
                $order = M('RewardOrder')->where($where)->find();
                if ($order) {
                    //修改充值订单状态
                    unset($where);
                    $where['id'] = $order['id'];
                    $data['update_time'] = time();
                    $data['pay_status']  = 1;
                    $data['pay_type']    = 1;
                    $data['r_order_status'] = 1;
                    $data['status']      = 1;
                    M('RewardOrder') ->where($where) ->data($data) ->save();

                    //添加账单明细
                    unset($data);
                    $data['user_type'] = 1;
                    $data['user_id']   = $order['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '悬赏订单——支付宝支付';
                    $data['price']     = $order['reward_price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    $res =  M('Detail')->data($data)->add();

                    //写入一条订单信息
                    $dat['user_type'] = 1;
                    $dat['user_id']   = $order['m_id'];
                    $dat['type']      = 2;
                    $dat['object_id'] = $order['id'];
                    $dat['headline']   = '悬赏消息';
                    $dat['content'] = '您的悬赏订单支付成功，请等待大师答疑解惑';
                    $dat['create_time'] = time();
                    $message = M('Message') ->data($dat) ->add();

                    if($order['master_id'] != 0){
                        //写入一条订单信息
                        $dat['user_type'] = 2;
                        $dat['user_id']   = $order['master_id'];
                        $dat['type']      = 2;
                        $dat['object_id'] = $order['id'];
                        $dat['headline']   = '悬赏消息';
                        $dat['content'] = '有一条指定您回答的悬赏订单已经付款，请您答疑解惑';
                        $dat['create_time'] = time();
                        $message = M('Message') ->data($dat) ->add();
                    }

                    echo "success";
                }
            }
        }
    }

    /**
     * 悬赏订单微信回调
     * 订单号   out_trade_no
     */
    public function rewardWXinNotify(){
        $xml = $GLOBALS['HTTP_RAW_POST_DATA'];
        $xml_res = $this->xmlToArray($xml);
        if($xml_res['result_code'] == 'SUCCESS'){
            $where['order_sn'] =$xml_res["out_trade_no"];
            $where['pay_status'] = 0;
            $where['pay_type'] = 0;
            $where['r_order_status'] = 0;
            $order = M('RewardOrder') ->where($where) ->find();
            if($order){
                //修改充值订单状态
                unset($where);
                $where['id'] = $order['id'];
                $data['update_time'] = time();
                $data['pay_status']  = 1;
                $data['pay_type']    = 2;
                $data['r_order_status'] = 1;
                $data['status']      = 1;
                $result = M('RewardOrder')->where($where)->data($data)->save();

                //添加账单明细
                unset($data);
                $data['user_type'] = 1;
                $data['user_id']   = $order['m_id'];
                $data['type']      = 2;
                $data['title']     = '悬赏订单——微信支付';
                $data['price']     = $order['reward_price'];
                $data['symbol']    = 2;
                $data['create_time'] = time();
                M('Detail')->data($data)->add();

                //写入一条订单信息
                $dat['user_type'] = 1;
                $dat['user_id']   = $order['m_id'];
                $dat['type']      = 2;
                $dat['object_id'] = $order['id'];
                $dat['headline']   = '悬赏消息';
                $dat['content'] = '您的悬赏订单支付成功，请等待大师答疑解惑';
                $dat['create_time'] = time();
                $message = M('Message') ->data($dat) ->add();

                if($order['master_id'] != 0){
                    //写入一条订单信息
                    $dat['user_type'] = 2;
                    $dat['user_id']   = $order['master_id'];
                    $dat['type']      = 2;
                    $dat['object_id'] = $order['id'];
                    $dat['headline']   = '悬赏消息';
                    $dat['content'] = '有一条指定您回答的悬赏订单已经付款，请您答疑解惑';
                    $dat['create_time'] = time();
                    $message = M('Message') ->data($dat) ->add();
                }

                //围观人数加1
//                $rorder_watch = D('Index','Logic') ->setType('RewardOrder',array('order_sn'=>$xml_res["out_trade_no"]),'watch_man',1,1);
            }else{
                apiResponse('0','支付失败');
            }
        }else{
            apiResponse('0','微信余额不足');
        }

        apiResponse('1','支付成功');
    }

    /**
     * 围观支付余额支付
     * 用户token      token
     * 围观ID         watch_id
     * 悬赏金额       price
     */
    public function watchPayOrder(){
        if(empty($_SERVER['HTTP_TOKEN']) && empty($_POST['token'])){
            apiResponse('-1','账号已过期，请重新登录');
        }elseif($_SERVER['HTTP_TOKEN']){
            $_POST['token'] = $_SERVER['HTTP_TOKEN'];
        }

        if(!$_POST['watch_id']){
            apiResponse('0','围观ID不能为空');
        }

        if($_POST['price'] < 0){
            apiResponse('0','悬赏金额有误');
        }
        D('Pay','Logic') ->watchPayOrder(I('post.'));
    }

    /**
     * 围观支付支付宝回调
     * 订单号    out_trade_no
     * 支付宝状态  trade_status  TRADE_SUCCESS
     */
    public function watchAlipayNotify(){
        Vendor('Alipay.Notify');
        $notify = new \Notify();
        if($notify->rsaCheck()) {
            $out_trade_no = $_POST['out_trade_no'];
            $trade_status = $_POST['trade_status'];
            if ($trade_status == 'TRADE_SUCCESS') {
                $where['order_sn'] = $out_trade_no;
                $where['pay_status'] = 0;
                $where['pay_type'] = 0;
                $order = M('Watch')->where($where)->find();
                if ($order) {
                    unset($where);
                    $where = array('id'=>$order['rorder_id'],'status'=>array('neq',9));
                    $rorder = D('Index','Logic') ->easyMysql('RewardOrder',3,$where);
                    if(!$rorder){
                        apiResponse('0','订单信息有误');
                    }
                    //修改充值订单状态
                    unset($where);
                    $where['id'] = $order['id'];
                    $data['update_time'] = time();
                    $data['pay_status']  = 1;
                    $data['pay_type']    = 1;
                    $data['status']      = 1;
                    M('Watch') ->where($where) ->data($data) ->save();

                    $where = array('r_o_id'=>$order['rorder_id'], 'is_adopt'=>1, 'status'=>array('neq',9));
                    $answer = D('Index','Logic') ->easyMysql('RorderAnswer',3,$where);
                    if(!$answer){
                        apiResponse('0','该悬赏暂无回复');
                    }

                    //添加账单明细
                    unset($data);
                    $data['user_type'] = 1;
                    $data['user_id']   = $order['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '围观支付——支付宝支付';
                    $data['price']     = $order['price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    M('Detail')->data($data)->add();

                    //写入一条订单信息
                    $dat['user_type'] = 1;
                    $dat['user_id']   = $order['m_id'];
                    $dat['type']      = 2;
                    $dat['object_id'] = $order['rorder_id'];
                    $dat['headline']   = '悬赏消息';
                    $dat['content'] = '您已成功围观该悬赏信息，请等待大师答疑解惑';
                    $dat['create_time'] = time();
                    $message = M('Message') ->data($dat) ->add();

                    $member_price = D('Index','Logic') ->setType('Member',array('id'=>$rorder['m_id']),'balance',($order['price']/2),1);
                    if($member_price){
                        $detail = D('Index','Logic') ->addDetail(1,$rorder['m_id'],1,'围观收入',1,($order['price']/2));
                    }

                    $master_price = D('Index','Logic') ->setType('Master',array('id'=>$answer['master_id']),'balance',($order['price']/2),1);
                    if($master_price){
                        $detail = D('Index','Logic') ->addDetail(2, $answer['master_id'], 1, '围观收入', 1, ($order['price']/2));
                        $pay_log = D('Index','Logic') ->addPayLog($rorder['m_id'], $answer['master_id'], 3, '用户围观收入', ($order['price']/2));
                    }

                    //围观人数加1
                    $rorder_watch = D('Index','Logic') ->setType('RewardOrder',array('id'=>$order['rorder_id']),'watch_man',1,1);

                    echo "success";
                }
            }
        }
    }

    /**
     * 围观支付微信回调
     * 订单号   out_trade_no
     */
    public function watchWXinNotify(){
        $xml = $GLOBALS['HTTP_RAW_POST_DATA'];
        $xml_res = $this->xmlToArray($xml);
        if($xml_res['result_code'] == 'SUCCESS'){
            $where['order_sn'] = $xml_res["out_trade_no"];
            $where['pay_status'] = 0;
            $where['pay_type'] = 0;
            $where['status']  = 0;
            $order = M('Watch') ->where($where) ->find();
            if($order){
                unset($where);
                $where = array('id'=>$order['rorder_id'],'status'=>array('neq',9));
                $rorder = D('Index','Logic') ->easyMysql('RewardOrder',3,$where);
                if(!$rorder){
                    apiResponse('0','订单信息有误');
                }
                //修改充值订单状态
                unset($where);
                $where['id'] = $order['id'];
                $data['update_time'] = time();
                $data['pay_status']  = 1;
                $data['pay_type']    = 2;
                $data['status']      = 1;
                $result = M('Watch')->where($where)->data($data)->save();

                $where = array('r_o_id'=>$order['rorder_id'], 'is_adopt'=>1, 'status'=>array('neq',9));
                $answer = D('Index','Logic') ->easyMysql('RorderAnswer',3,$where);
                if(!$answer){
                    apiResponse('0','该悬赏暂无回复');
                }

                //添加账单明细
                unset($data);
                $data['user_type'] = 1;
                $data['user_id']   = $order['m_id'];
                $data['type']      = 2;
                $data['title']     = '围观支付——微信支付';
                $data['price']     = $order['price'];
                $data['symbol']    = 2;
                $data['create_time'] = time();
                M('Detail')->data($data)->add();

                //写入一条订单信息
                $dat['user_type'] = 1;
                $dat['user_id']   = $order['m_id'];
                $dat['type']      = 2;
                $dat['object_id'] = $order['rorder_id'];
                $dat['headline']   = '悬赏消息';
                $dat['content'] = '您已成功围观该悬赏信息，请等待大师答疑解惑';
                $dat['create_time'] = time();
                $message = M('Message') ->data($dat) ->add();

                $member_price = D('Index','Logic') ->setType('Member',array('id'=>$rorder['m_id']),'balance',($order['price']/2),1);
                if($member_price){
                    $detail = D('Index','Logic') ->addDetail(1,$rorder['m_id'],1,'围观收入',1,($order['price']/2));
                }

                $master_price = D('Index','Logic') ->setType('Master',array('id'=>$answer['master_id']),'balance',($order['price']/2),1);
                if($master_price){
                    $detail = D('Index','Logic') ->addDetail(2, $answer['master_id'], 1, '围观收入', 1, ($order['price']/2));
                    $pay_log = D('Index','Logic') ->addPayLog($rorder['m_id'], $answer['master_id'], 3, '用户围观收入', ($order['price']/2));
                }

                //围观人数加1
                $rorder_watch = D('Index','Logic') ->setType('RewardOrder',array('id'=>$order['rorder_id']),'watch_man',1,1);
            }else{
                apiResponse('0','支付失败');
            }
        }else{
            apiResponse('0','微信余额不足');
        }

        apiResponse('1','支付成功');
    }

    /**
     * 服务订单余额支付       不需要消息提醒
     * 用户token    token
     * 服务订单ID   sorder_id
     * 悬赏金额     price
     */
    public function servicePayOrder(){
        if(empty($_SERVER['HTTP_TOKEN']) && empty($_POST['token'])){
            apiResponse('-1','账号已过期，请重新登录');
        }elseif($_SERVER['HTTP_TOKEN']){
            $_POST['token'] = $_SERVER['HTTP_TOKEN'];
        }

        if(!$_POST['sorder_id']){
            apiResponse('0','服务订单ID不能为空');
        }

        if($_POST['price'] < 0){
            apiResponse('0','悬赏金额有误');
        }
        D('Pay','Logic') ->servicePayOrder(I('post.'));
    }

    /**
     * 服务订单支付宝回调       不需要消息提醒
     * 订单号    out_trade_no
     * 支付宝状态  trade_status  TRADE_SUCCESS
     */
    public function serviceAlipayNotify(){
        Vendor('Alipay.Notify');
        $notify = new \Notify();
        if($notify->rsaCheck()) {
            $out_trade_no = $_POST['out_trade_no'];
            $trade_status = $_POST['trade_status'];
            if ($trade_status == 'TRADE_SUCCESS') {
                $where['order_sn'] = $out_trade_no;
                $where['pay_status'] = 0;
                $where['pay_type'] = 0;
                $order = M('ServiceOrder') ->where($where) ->find();
                if($order){
                    //修改充值订单状态
                    unset($where);
                    $where['id'] = $order['id'];
                    $data['update_time'] = time();
                    $data['pay_status']  = 1;
                    $data['pay_type']    = 1;
                    $data['s_order_status'] = 1;
                    $data['status']      = 1;
                    M('ServiceOrder') ->where($where) ->data($data) ->save();

                    //添加账单明细
                    unset($data);
                    $data['user_type'] = 1;
                    $data['user_id']   = $order['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '服务订单——支付宝支付';
                    $data['price']     = $order['price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    M('Detail')->data($data)->add();


                    echo "success";
                }
            }
        }
    }

    /**
     * 服务订单微信回调       不需要消息提醒
     * 订单号   out_trade_no
     */
    public function serviceWXinNotify(){
        $xml = $GLOBALS['HTTP_RAW_POST_DATA'];
        $xml_res = $this->xmlToArray($xml);
        if($xml_res['result_code'] == 'SUCCESS'){
            $where['order_sn'] = $xml_res["out_trade_no"];
            $where['pay_status'] = 0;
            $where['pay_type'] = 0;
            $where['status']  = 0;
            $order = M('ServiceOrder') ->where($where) ->find();
            if($order){
                //修改充值订单状态
                unset($where);
                $where['id'] = $order['id'];
                $data['update_time'] = time();
                $data['pay_status']  = 1;
                $data['pay_type']    = 2;
                $data['status']      = 1;
                $data['s_order_status'] = 1;
                $result = M('ServiceOrder')->where($where)->data($data)->save();

                //添加账单明细
                unset($data);
                $data['user_type'] = 1;
                $data['user_id']   = $order['m_id'];
                $data['type']      = 2;
                $data['title']     = '服务订单——微信支付';
                $data['price']     = $order['price'];
                $data['symbol']    = 2;
                $data['create_time'] = time();
                M('Detail')->data($data)->add();

                //服务订单没有订单信息
//                $dat['user_type'] = 1;
//                $dat['user_id']   = $order['m_id'];
//                $dat['type']      = 2;
//                $dat['object_id'] = $order['rorder_id'];
//                $dat['headline']   = '悬赏消息';
//                $dat['content'] = '您已成功围观该悬赏信息，请等待大师答疑解惑';
//                $dat['create_time'] = time();
//                $message = M('Message') ->data($dat) ->add();
            }else{
                apiResponse('0','支付失败');
            }
        }else{
            apiResponse('0','微信余额不足');
        }

        apiResponse('1','支付成功');
    }

    /**
     * 红包支付余额支付       不需要消息提醒
     * 红包ID        red_id
     * 用户token     token
     * 红包金额      price
     */
    public function redPayOrder(){
        if(empty($_SERVER['HTTP_TOKEN']) && empty($_POST['token'])){
            apiResponse('-1','账号已过期，请重新登录');
        }elseif($_SERVER['HTTP_TOKEN']){
            $_POST['token'] = $_SERVER['HTTP_TOKEN'];
        }

        if(!$_POST['red_id']){
            apiResponse('0','红包ID不能为空');
        }

        if($_POST['price'] < 0){
            apiResponse('0','红包金额有误');
        }
        D('Pay','Logic') ->redPayOrder(I('post.'));
    }

    /**
     * 红包支付支付宝回调       不需要消息提醒
     * 订单号    out_trade_no
     * 支付宝状态  trade_status  TRADE_SUCCESS
     */
    public function redAlipayNotify(){
        Vendor('Alipay.Notify');
        $notify = new \Notify();
        if($notify->rsaCheck()) {
            $out_trade_no = $_POST['out_trade_no'];
            $trade_status = $_POST['trade_status'];
            if ($trade_status == 'TRADE_SUCCESS') {
                $where['order_sn'] = $out_trade_no;
                $where['pay_status'] = 0;
                $where['pay_type'] = 0;
                $where['status']   = 0;
                $order = M('RedPackage') ->where($where) ->find();
                if($order){
                    //修改充值订单状态
                    unset($where);
                    $where['id'] = $order['id'];
                    $data['update_time'] = time();
                    $data['pay_status']  = 1;
                    $data['pay_type']    = 1;
                    $data['status']      = 1;
                    M('RedPackage') ->where($where) ->data($data) ->save();

                    //添加账单明细
                    unset($data);
                    $data['user_type'] = 1;
                    $data['user_id']   = $order['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '红包支付——支付宝支付';
                    $data['price']     = $order['price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    M('Detail')->data($data)->add();
                    echo "success";
                }
            }
        }
    }

    /**
     * 服务订单微信回调       不需要消息提醒
     * 订单号   out_trade_no
     */
    public function redWXinNotify(){
        $xml = $GLOBALS['HTTP_RAW_POST_DATA'];
        $xml_res = $this->xmlToArray($xml);
        if($xml_res['result_code'] == 'SUCCESS'){
            $where['order_sn'] =$xml_res["out_trade_no"];
            $where['pay_status'] = 0;
            $where['pay_type'] = 0;
            $where['status']  = 0;
            $order = M('RedPackage') ->where($where) ->find();
            if($order){
                //修改充值订单状态
                unset($where);
                $where['id'] = $order['id'];
                $data['update_time'] = time();
                $data['pay_status']  = 1;
                $data['pay_type']    = 2;
                $data['status']      = 1;
                $result = M('RedPackage')->where($where)->data($data)->save();

                //添加账单明细
                unset($data);
                $data['user_type'] = 1;
                $data['user_id']   = $order['m_id'];
                $data['type']      = 2;
                $data['title']     = '红包支付——微信支付';
                $data['price']     = $order['price'];
                $data['symbol']    = 2;
                $data['create_time'] = time();
                M('Detail')->data($data)->add();
            }else{
                apiResponse('0','支付失败');
            }
        }else{
            apiResponse('0','微信余额不足');
        }

        apiResponse('1','支付成功');
    }

    /**
     * 商品订单余额支付       需要消息提醒
     * 用户token   token
     * 订单号      order_sn
     */
    public function orderPayOrder(){
        if(empty($_SERVER['HTTP_TOKEN']) && empty($_POST['token'])){
            apiResponse('-1','账号已过期，请重新登录');
        }elseif($_SERVER['HTTP_TOKEN']){
            $_POST['token'] = $_SERVER['HTTP_TOKEN'];
        }

        if(!$_POST['order_sn']){
            apiResponse('0','订单号不能为空');
        }
        D('Pay','Logic') ->orderPayOrder(I('post.'));
    }

    /**
     * 商品订单支付宝回调
     * 订单号    out_trade_no
     * 支付宝状态  trade_status  TRADE_SUCCESS
     * 测试一下这个   第一个数字是字母则是那个小订单   如果不是字幕则是大订单
     */
    public function orderAlipayNotify(){
        Vendor('Alipay.Notify');
        $notify = new \Notify();
        if($notify->rsaCheck()) {
            $out_trade_no = $_POST['out_trade_no'];
            //取订单的第一位  不是数字走总订单   是数字走分订单
            $number = substr($out_trade_no , 0, 1);
            $bool = is_numeric($number);
            $trade_status = $_POST['trade_status'];
            if ($trade_status == 'TRADE_SUCCESS') {
                if($bool == 0){
                    //查询总订单数据   并修改状态
                    $where['order_total_sn'] = $out_trade_no;
                    $where['pay_status']     = 0;
                    $where['pay_type']       = 0;
                    $order_info = M('OrderGroup') ->where($where) ->find();
                    if(!$order_info){
                        apiResponse('0','订单信息有误');
                    }
                    $data['pay_status'] = 1;
                    $data['pay_type']   = 1;
                    $data['update_time'] = time();
                    $data['status']     = 1;
                    $res = M('OrderGroup') ->where($where) ->data($data) ->save();
                    if(!$res){
                        apiResponse('0','改变订单状态失败');
                    }
                    //用户写入详情
                    $data['user_type'] = 1;
                    $data['user_id']   = $order_info['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '宝阁订单支付';
                    $data['price']     = $order_info['order_total_price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    $result = M('Detail') ->add($data);
                    unset($where);
                    unset($data);
                    //通过总订单ID查询分订单  循环修改分订单状态
                    $where['order_total_id'] = $order_info['id'];
                    $where['pay_status']     = 0;
                    $where['pay_type']       = 0;
                    $where['order_status']   = 0;
                    $order_data = M('Order') ->where($where) ->field('id as order_id, order_sn, m_id, master_id, pay_price') ->select();
                    //修改订单状态并写入大师详情
                    foreach($order_data as $k =>$v){
                        unset($where);
                        $where['id']            = $v['order_id'];
                        $data['pay_type']       = 1;
                        $data['order_status']   = 1;
                        $data['pay_status']     = 1;
                        $data['update_time']    = time();
                        $data['pay_time']       = time();
                        $data['status']         = 1;
                        $result =  M('Order') ->where($where) ->data($data) ->save();
                        if(!$result){
                            apiResponse('0','分订单信息有误');
                        }

                        //输入用户信息  商家信息  商家详情  商家明细
                        $message_member = D('Index','Logic') ->addMessage(1,$v['m_id'],3,$v['order_id'],'宝阁消息','您订单号为'.$v['order_sn'].'的订单已成功支付，请等待商家操作。');
                        $member = D('Index','Logic') ->easyMysql('Member',3,array('id'=>$v['m_id']));
                        if($member['push_message'] == 1){
                            //极光推送
                            //调用极光推送
                            $con = '您订单号为'.$v['order_sn'].'的订单已成功支付，请等待商家操作。';
                            $arr_j = $member['token'];
                            D('Index','Logic') -> jPushToMember($arr_j, $v['order_id'], $con ,$con);
                        }

                        $message_master = D('Index','Logic') ->addMessage(2,$v['master_id'],3,$v['order_id'],'宝阁消息','您订单号为'.$v['order_sn'].'的的订单已成功支付，请进行相关操作。');
                        $master = D('Index','Logic') ->easyMysql('Master',3,array('id'=>$v['master_id']));
                        //极光推送
                        //调用极光推送
                        $con = '您订单号为'.$v['order_sn'].'的的订单已成功支付，请进行相关操作。';
                        $arr_j = $master['token'];
                        D('Index','Logic') -> jPushToMaster($arr_j, $v['order_id'], $con ,$con);
                    }
                    echo 'success';
                }else{
                    unset($where);
                    unset($data);
                    $where['order_sn']      = $out_trade_no;
                    $where['status']        = 0;
                    $where['order_status']  = 0;
                    $order_list = M('Order') ->where($where) ->field('id as order_id, order_sn, m_id, master_id, pay_price') ->find();
                    if(!$order_list){
                        apiResponse('0','该订单详情有误');
                    }
                    $data['order_status'] = 1;
                    $data['pay_status']   = 1;
                    $data['pay_type']     = 1;
                    $data['update_time']  = time();
                    $data['pay_time']     = time();
                    $data['status']       = 1;
                    $result_data = M('Order') ->where($where) ->data($data) ->save();
                    if(!$result_data){
                        apiResponse('0','付款失败');
                    }
                    unset($data);
                    unset($where);
                    //写入用户详情
                    $data['user_type'] = 1;
                    $data['user_id']   = $order_list['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '宝阁订单支付';
                    $data['price']     = $order_list['pay_price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    $result = M('Detail') ->add($data);

                    //输入用户信息  商家信息  商家详情  商家明细
                    $message_member = D('Index','Logic') ->addMessage(1,$order_list['m_id'],3,$order_list['order_id'],'宝阁消息','您订单号为'.$order_list['order_sn'].'的订单已成功支付，请等待商家操作。');
                    $member = D('Index','Logic') ->easyMysql('Member',3,array('id'=>$order_list['m_id']));
                    if($member['push_message'] == 1){
                        //极光推送
                        //调用极光推送
                        $con = '您订单号为'.$order_list['order_sn'].'的订单已成功支付，请等待商家操作。';
                        $arr_j = $member['token'];
                        D('Index','Logic') -> jPushToMember($arr_j, $order_list['order_id'], $con ,$con);
                    }

                    $message_master = D('Index','Logic') ->addMessage(2,$order_list['master_id'],3,$order_list['order_id'],'宝阁消息','您订单号为'.$order_list['order_sn'].'的的订单已成功支付，请进行相关操作。');
                    $master = D('Index','Logic') ->easyMysql('Master',3,array('id'=>$order_list['master_id']));
                    //极光推送
                    //调用极光推送
                    $con = '您订单号为'.$order_list['order_sn'].'的订单已成功取消退货。';
                    $arr_j = $master['token'];
                    D('Index','Logic') -> jPushToMaster($arr_j, $order_list['order_id'], $con ,$con);
                    echo 'success';
                }
            }
        }
    }

    /**
     * 商品订单微信回调
     * 订单号   out_trade_no
     */
    public function orderWXinNotify(){
        $xml = $GLOBALS['HTTP_RAW_POST_DATA'];
        $xml_res = $this->xmlToArray($xml);
        if($xml_res['result_code'] == 'SUCCESS'){
            $out_trade_no = $xml_res["out_trade_no"];

            //取订单的第一位  不是数字走总订单   是数字走分订单
            $number = substr($out_trade_no , 0, 1);
            $bool = is_numeric($number);

            if($bool == 0){
                //查询总订单数据   并修改状态
                $where['order_total_sn'] = $out_trade_no;
                $where['pay_status']     = 0;
                $where['pay_type']       = 0;
                $order_info = M('OrderGroup') ->where($where) ->find();
                if(!$order_info){
                    apiResponse('0','订单信息有误');
                }
                $data['pay_status'] = 1;
                $data['pay_type']   = 2;
                $data['update_time'] = time();
                $data['status']     = 1;
                $res = M('OrderGroup') ->where($where) ->data($data) ->save();
                if(!$res){
                    apiResponse('0','改变订单状态失败');
                }
                //用户写入详情
                $data['user_type'] = 1;
                $data['user_id']   = $order_info['m_id'];
                $data['type']      = 2;
                $data['title']     = '宝阁订单支付';
                $data['price']     = $order_info['order_total_price'];
                $data['symbol']    = 2;
                $data['create_time'] = time();
                $result = M('Detail') ->add($data);
                unset($where);
                unset($data);
                //通过总订单ID查询分订单  循环修改分订单状态
                $where['order_total_id'] = $order_info['id'];
                $where['pay_status']     = 0;
                $where['pay_type']       = 0;
                $where['order_status']   = 0;
                $order_data = M('Order') ->where($where) ->field('id as order_id, order_sn, m_id, master_id, pay_price') ->select();
                //修改订单状态并写入大师详情
                foreach($order_data as $k =>$v){
                    unset($where);
                    $where['id']            = $v['order_id'];
                    $data['pay_type']       = 2;
                    $data['order_status']   = 1;
                    $data['pay_status']     = 1;
                    $data['pay_time']     = time();
                    $data['update_time']    = time();
                    $data['status']         = 1;
                    $result =  M('Order') ->where($where) ->data($data) ->save();
                    if(!$result){
                        apiResponse('0','分订单信息有误');
                    }

                    unset($data);
                    unset($where);
                    //写入用户详情
                    $data['user_type'] = 1;
                    $data['user_id']   = $v['m_id'];
                    $data['type']      = 2;
                    $data['title']     = '宝阁订单支付';
                    $data['price']     = $v['pay_price'];
                    $data['symbol']    = 2;
                    $data['create_time'] = time();
                    $result = M('Detail') ->add($data);

                    //输入用户信息  商家信息  商家详情  商家明细
                    $message_member = D('Index','Logic') ->addMessage(1,$v['m_id'],3,$v['order_id'],'宝阁消息','您订单号为'.$v['order_sn'].'的订单已成功支付，请等待商家操作。');
                    $member = D('Index','Logic') ->easyMysql('Member',3,array('id'=>$v['m_id']));

                    if($member['push_message'] == 1){
                        //极光推送
                        //调用极光推送
                        $con = '您订单号为'.$v['order_sn'].'的订单已成功支付，请等待商家操作。';
                        $arr_j = $member['token'];
                        D('Index','Logic') -> jPushToMember($arr_j, $v['order_id'], $con ,$con);
                    }

                    $message_master = D('Index','Logic') ->addMessage(2,$v['master_id'],3,$v['order_id'],'宝阁消息','您订单号为'.$v['order_sn'].'的的订单已成功支付，请进行相关操作。');
                    $master = D('Index','Logic') ->easyMysql('Master',3,array('id'=>$v['master_id']));
                    //极光推送
                    //调用极光推送
                    $con = '您订单号为'.$v['order_sn'].'的的订单已成功支付，请进行相关操作。';
                    $arr_j = $master['token'];
                    D('Index','Logic') -> jPushToMaster($arr_j, $v['order_id'], $con ,$con);
                }
            }else{
                unset($where);
                unset($data);
                $where['order_sn']      = $out_trade_no;
                $where['status']        = 0;
                $where['order_status']  = 0;
                $order_list = M('Order') ->where($where) ->field('id as order_id, order_sn, m_id, master_id, pay_price') ->find();
                if(!$order_list){
                    apiResponse('0','该订单详情有误');
                }
                $data['order_status'] = 1;
                $data['pay_status']   = 1;
                $data['pay_type']     = 2;
                $data['update_time']  = time();
                $data['pay_time']     = time();
                $data['status']       = 1;
                $result_data = M('Order') ->where($where) ->data($data) ->save();
                if(!$result_data){
                    apiResponse('0','付款失败');
                }
                unset($data);
                unset($where);
                //写入用户详情
                $data['user_type'] = 1;
                $data['user_id']   = $order_list['m_id'];
                $data['type']      = 2;
                $data['title']     = '宝阁订单支付';
                $data['price']     = $order_list['pay_price'];
                $data['symbol']    = 2;
                $data['create_time'] = time();
                $result = M('Detail') ->add($data);

                //输入用户信息  商家信息  商家详情  商家明细
                $message_member = D('Index','Logic') ->addMessage(1,$order_list['m_id'],3,$order_list['order_id'],'宝阁消息','您订单号为'.$order_list['order_sn'].'的订单已成功支付，请等待商家操作。');
                $member = D('Index','Logic') ->easyMysql('Member',3,array('id'=>$order_list['m_id']));

                if($member['push_message'] == 1){
                    //极光推送
                    //调用极光推送
                    $con = '您订单号为'.$order_list['order_sn'].'的订单已成功支付，请等待商家操作。';
                    $arr_j = $member['token'];
                    D('Index','Logic') -> jPushToMember($arr_j, $order_list['order_id'], $con ,$con);
                }

                $message_master = D('Index','Logic') ->addMessage(2,$order_list['master_id'],3,$order_list['order_id'],'宝阁消息','您订单号为'.$order_list['order_sn'].'的的订单已成功支付，请进行相关操作。');
                $master = D('Index','Logic') ->easyMysql('Master',3,array('id'=>$order_list['master_id']));
                //极光推送
                //调用极光推送
                $con = '您订单号为'.$order_list['order_sn'].'的的订单已成功支付，请进行相关操作。';
                $arr_j = $master['token'];
                D('Index','Logic') -> jPushToMaster($arr_j, $order_list['order_id'], $con ,$con);
            }
        }else{
            apiResponse('0','微信余额不足');
        }

        apiResponse('1','支付成功');
    }

    /**
     * 查询订单状态
     * 需要传递的参数：
     * 传入类别：type  1  悬赏订单  2  围观支付  3  服务订单  4  随缘红包
     * 订单编号：order_sn
     */
    public function findStatus(){
        $where['order_sn'] = $_POST['order_sn'];
        if($_POST['type'] == 1){
            $order = M('RewardOrder')->where($where)->find();
        }elseif($_POST['type'] == 2){
            $order = M('Watch')->where($where)->find();
        }elseif($_POST['type'] == 3){
            $order = M('ServiceOrder')->where($where)->find();
        }elseif($_POST['type'] == 4){
            $order = M('RedPackage')->where($where)->find();
        }elseif($_POST['type'] == 5){
            //取订单的第一位  不是数字走总订单   是数字走分订单
            $number = substr($_POST['order_sn'] , 0, 1);
            $bool = is_numeric($number);
            if($bool == 0){
                $order = M('OrderGroup')->where(array('order_total_sn'=>$_POST['order_sn']))->find();
            }else{
                $order = M('Order')->where($where)->find();
            }
        }

        if($order['status'] == 0){
            $result_data['status'] = '0';
        }else{
            $result_data['status'] = '1';
        }
        apiResponse('1','',$result_data);
    }

    /**
     * 	作用：将xml转为array
     */
    function xmlToArray($xml){
        //将XML转为array
        $array_data = json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true);
        return $array_data;
    }
}
